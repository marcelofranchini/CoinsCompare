[{"C:\\Users\\Marcelo\\Desktop\\coinsCompare\\coinsCompare1\\src\\components\\connection\\index.js":"1","C:\\Users\\Marcelo\\Desktop\\coinsCompare\\coinsCompare1\\src\\components\\jumbotron\\index.js":"2","C:\\Users\\Marcelo\\Desktop\\coinsCompare\\coinsCompare1\\src\\components\\home\\index.js":"3","C:\\Users\\Marcelo\\Desktop\\coinsCompare\\coinsCompare1\\src\\components\\header\\index.js":"4","C:\\Users\\Marcelo\\Desktop\\coinsCompare\\coinsCompare1\\src\\App.js":"5"},{"size":5022,"mtime":1606486765728,"results":"6","hashOfConfig":"7"},{"size":482,"mtime":1606435871453,"results":"8","hashOfConfig":"7"},{"size":328,"mtime":1606434122504,"results":"9","hashOfConfig":"7"},{"size":709,"mtime":1606435695609,"results":"10","hashOfConfig":"7"},{"size":194,"mtime":1606434118254,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"1x248ab",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Marcelo\\Desktop\\coinsCompare\\coinsCompare1\\src\\components\\connection\\index.js",["23","24","25","26"],"import React, { useState, useEffect , useCallback} from 'react';\r\nimport { Chart } from \"react-google-charts\";\r\nimport './styles.css'\r\nimport { GraphUp, CalendarPlus, CalendarMinus } from 'react-bootstrap-icons'\r\n\r\n\r\n\r\nlet a  = new Date(1604534400000).toLocaleString()\r\n\r\n//console.log(a)\r\n\r\nfunction Connection() {\r\n  const [inputDateBegin, setInputDateBegin] = useState(formatDateBegin())\r\n  const [inputDateFinish, setInputDateFinish] = useState(formatDate())\r\n  const [inputInvestiment, setInputInvestiment] = useState(10000)\r\n  const [dataCoins, setDataCoins] = useState([])\r\n\r\n\r\n  console.log(dataCoins)\r\n\r\n  const setSortedTodos = useCallback(() => {\r\n  const unixDataBegin = new Date(inputDateBegin)/ 1000   \r\n  const unixDataFinish = new Date(inputDateFinish)/ 1000 \r\n  const differenceDays = (unixDataFinish - unixDataBegin ) / 86400 \r\n  \r\n  console.log(unixDataBegin)\r\n\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n    const options = {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        cache: 'default',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    }\r\n\r\n    fetch(`https://min-api.cryptocompare.com/data/v2/histoday?fsym=BTC&tsym=BRL&limit=${differenceDays}&aggregate=1&toTs=${unixDataFinish}&api_key=23b31af409285635a4f19021b1f1986dfaf2e51c301db41cb613e78d59bd05dc`, options)\r\n    .then(response => response.json())\r\n    .then(result =>{\r\n      \r\n      if(result.Response === 'Success'){\r\n        setDataCoins(result.Data.Data)\r\n\r\n\r\n      } \r\n    } )\r\n    .catch(error => {\r\n      return error  \r\n    });\r\n  });\r\n\r\n    \r\n    useEffect(() => {\r\n      setSortedTodos()\r\n      },[inputDateFinish,inputDateBegin]);\r\n\r\n    \r\n   function  mapCoins (){\r\n      const names = [['x', 'BitCoin R$', 'Percentual Acumulado %',' Rendimento Acumulado R$']]\r\n      let open = []\r\n      dataCoins.map((item, i)=> \r\n        {\r\n          open.push(item.open)\r\n          let date = new Date((item.time + 86400)*1000).toLocaleString().slice(0,-9)\r\n          let sumPercents = (((item.close / open[0])*100) - 100 )  \r\n          let value = ((parseFloat(inputInvestiment) * (sumPercents/100))+ parseFloat(inputInvestiment))\r\n          names.push([date, item.close, sumPercents, value])\r\n\r\n        })\r\n      return names\r\n    }\r\n\r\n    \r\n    function formatDate() {\r\n      let d = new Date(),\r\n          month = '' + (d.getMonth() + 1),\r\n          day = '' + d.getDate(),\r\n          year = d.getFullYear();\r\n  \r\n      if (month.length < 2) \r\n          month = '0' + month;\r\n      if (day.length < 2) \r\n          day = '0' + day;\r\n  \r\n      return [year, month, day].join('-');\r\n\r\n  }\r\n\r\n  function formatDateBegin() {\r\n    let d = new Date(),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n\r\n    return [year-1, month, day].join('-');\r\n\r\n}\r\n\r\n    \r\n\r\n    \r\n\r\n    return (\r\n        <div className='connection'>\r\n\r\n          <div className='row'>\r\n            <div className=\"card col-sm-6 col-md-6 col-lg-2\">\r\n              <div className='rowCard'>\r\n                <CalendarMinus color='#fbc658' size={40}/>\r\n                <h5>Data Inicial</h5>\r\n                </div>\r\n              <hr/>\r\n              <input  type='date' id='dataBegin' value={inputDateBegin} max={formatDate()} min={\"2015-07-01\"} onChange={(e)=>{setInputDateBegin(e.target.value)}}/> \r\n            </div>\r\n\r\n            <div className=\"card col-sm-6 col-md-6 col-lg-2\">\r\n                <div className='rowCard'>\r\n                <CalendarPlus color='#ef8157' size={40}/>\r\n                <h5>Data Final</h5>\r\n                </div>\r\n              <hr/>\r\n              <input  type='date' id='dateFinish' value={inputDateFinish} max={formatDate()} min={\"2015-07-01\"} onChange={(e)=>{setInputDateFinish(e.target.value)}}/> \r\n           \r\n            </div>\r\n            <div className=\"card col-sm-6 col-md-6 col-lg-2\" id='cardH'>\r\n                <div className='rowCard'>\r\n                <GraphUp color='#6bd098' size={40}/>\r\n                <h5>Investimento</h5>\r\n                </div>\r\n              <hr/>\r\n             <input  type='number' id='Investimen' value={inputInvestiment} min=\"0\" step=\".01\" onChange={(e)=>{setInputInvestiment(e.target.value)}}/>\r\n            </div> \r\n          </div>\r\n\r\n          <div className=\"card col-sm-6 col-md-6 col-lg-7\" id='chartCard'>\r\n        <Chart\r\n          width={'100%'}\r\n          height={'360px'}\r\n          chartType=\"LineChart\"\r\n          loader={<div>Carregando Gr√°fico</div>}\r\n          data={mapCoins()\r\n          }\r\n          options={{\r\n            hAxis: {\r\n              title: 'Data',\r\n            },\r\n            vAxis: {\r\n              title: 'Valor BitCoin',\r\n            },\r\n          }}\r\n          rootProps={{ 'data-testid': '1' }}\r\n          id='chart'\r\n        />\r\n\r\n\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Connection;","C:\\Users\\Marcelo\\Desktop\\coinsCompare\\coinsCompare1\\src\\components\\jumbotron\\index.js",[],"C:\\Users\\Marcelo\\Desktop\\coinsCompare\\coinsCompare1\\src\\components\\home\\index.js",[],"C:\\Users\\Marcelo\\Desktop\\coinsCompare\\coinsCompare1\\src\\components\\header\\index.js",["27","28","29","30"],"C:\\Users\\Marcelo\\Desktop\\coinsCompare\\coinsCompare1\\src\\App.js",[],{"ruleId":"31","severity":1,"message":"32","line":8,"column":5,"nodeType":"33","messageId":"34","endLine":8,"endColumn":6},{"ruleId":"35","severity":1,"message":"36","line":21,"column":26,"nodeType":"33","endLine":21,"endColumn":37},{"ruleId":"35","severity":1,"message":"37","line":56,"column":9,"nodeType":"38","endLine":56,"endColumn":41,"suggestions":"39"},{"ruleId":"40","severity":1,"message":"41","line":62,"column":30,"nodeType":"42","messageId":"43","endLine":62,"endColumn":32},{"ruleId":"31","severity":1,"message":"44","line":1,"column":17,"nodeType":"33","messageId":"34","endLine":1,"endColumn":25},{"ruleId":"31","severity":1,"message":"45","line":1,"column":27,"nodeType":"33","messageId":"34","endLine":1,"endColumn":36},{"ruleId":"31","severity":1,"message":"46","line":1,"column":39,"nodeType":"33","messageId":"34","endLine":1,"endColumn":50},{"ruleId":"31","severity":1,"message":"47","line":2,"column":10,"nodeType":"33","messageId":"34","endLine":2,"endColumn":16},"no-unused-vars","'a' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has a missing dependency: 'setSortedTodos'. Either include it or remove the dependency array.","ArrayExpression",["48"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'useEffect' is defined but never used.","'useCallback' is defined but never used.","'Button' is defined but never used.",{"desc":"49","fix":"50"},"Update the dependencies array to be: [inputDateFinish, inputDateBegin, setSortedTodos]",{"range":"51","text":"52"},[1659,1691],"[inputDateFinish, inputDateBegin, setSortedTodos]"]