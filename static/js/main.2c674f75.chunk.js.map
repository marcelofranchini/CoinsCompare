{"version":3,"sources":["reportWebVitals.js","assets/icon.png","components/header/index.js","components/connection/index.js","components/jumbotron/index.js","components/footer/index.js","components/home/index.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","Navbar","bg","variant","Brand","href","className","alt","src","icon","width","height","Connection","useState","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","formatDateBegin","inputDateBegin","setInputDateBegin","formatDate","inputDateFinish","setInputDateFinish","inputInvestiment","setInputInvestiment","dataCoins","setDataCoins","setSortedTodos","useCallback","unixDataBegin","unixDataFinish","differenceDays","myHeaders","Headers","append","options","method","mode","cache","headers","redirect","fetch","response","json","result","Response","Data","catch","error","useEffect","color","size","type","id","value","max","min","onChange","e","target","step","style","display","justifyContent","alignItems","chartType","loader","data","names","open","map","item","i","push","date","time","toLocaleString","slice","sumPercents","close","parseFloat","mapCoins","hAxis","title","vAxis","rootProps","JumbotronB","Jumbotron","Button","Footer","Home","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c674f75.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/icon.dfff4d35.png\";","import React, { useState, useEffect , useCallback} from 'react';\r\nimport { Button, Navbar } from 'react-bootstrap';\r\nimport  '../../bootstrap.min.css' ;\r\nimport './styles.css'\r\nimport icon from '../../assets/icon.png'\r\n\r\nfunction Header() {\r\n    return(\r\n        <div > \r\n          <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"#home\" className='bar'>\r\n               <img\r\n                alt=\"\"\r\n                src={icon}\r\n                width=\"30\"\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n              />{' '}\r\n              Coins Compare\r\n            </Navbar.Brand>\r\n          </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState, useEffect , useCallback} from 'react';\r\nimport { Chart } from \"react-google-charts\";\r\nimport './styles.css'\r\nimport { GraphUp, CalendarPlus, CalendarMinus } from 'react-bootstrap-icons'\r\n\r\n\r\nfunction Connection() {\r\n  const [inputDateBegin, setInputDateBegin] = useState(formatDateBegin())\r\n  const [inputDateFinish, setInputDateFinish] = useState(formatDate())\r\n  const [inputInvestiment, setInputInvestiment] = useState(10000)\r\n  const [dataCoins, setDataCoins] = useState([])\r\n  const setSortedTodos = useCallback(() => {\r\n  const unixDataBegin = new Date(inputDateBegin)/ 1000   \r\n  const unixDataFinish = new Date(inputDateFinish)/ 1000 \r\n  const differenceDays = (unixDataFinish - unixDataBegin ) / 86400 \r\n  \r\n\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n    const options = {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        cache: 'default',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    }\r\n\r\n    fetch(`https://min-api.cryptocompare.com/data/v2/histoday?fsym=BTC&tsym=BRL&limit=${differenceDays}&aggregate=1&toTs=${unixDataFinish}&api_key=23b31af409285635a4f19021b1f1986dfaf2e51c301db41cb613e78d59bd05dc`, options)\r\n    .then(response => response.json())\r\n    .then(result =>{\r\n      \r\n      if(result.Response === 'Success'){\r\n        setDataCoins(result.Data.Data)\r\n\r\n\r\n      } \r\n    } )\r\n      .catch(error => {\r\n        return error  \r\n      });\r\n    });\r\n\r\n    \r\n    useEffect(() => {\r\n      setSortedTodos()\r\n      },[inputDateFinish,inputDateBegin]);\r\n\r\n    \r\n   function  mapCoins (){\r\n      const names = [['x', 'BitCoin R$', 'Percentual Acumulado %',' Rendimento Acumulado R$']]\r\n      let open = []\r\n      dataCoins.map((item, i)=> \r\n        {\r\n          open.push(item.open)\r\n          let date = new Date((item.time + 86400)*1000).toLocaleString().slice(0,-9)\r\n          let sumPercents = (((item.close / open[0])*100) - 100 )  \r\n          let value = ((parseFloat(inputInvestiment) * (sumPercents/100))+ parseFloat(inputInvestiment))\r\n          names.push([date, item.close, sumPercents, value])\r\n\r\n        })\r\n      return names\r\n    }\r\n\r\n    \r\n    function formatDate() {\r\n      let d = new Date(),\r\n          month = '' + (d.getMonth() + 1),\r\n          day = '' + d.getDate(),\r\n          year = d.getFullYear();\r\n  \r\n      if (month.length < 2) \r\n          month = '0' + month;\r\n      if (day.length < 2) \r\n          day = '0' + day;\r\n  \r\n      return [year, month, day].join('-');\r\n\r\n  }\r\n\r\n  function formatDateBegin() {\r\n    let d = new Date(),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n\r\n    return [year-1, month, day].join('-');\r\n\r\n}\r\n\r\n    \r\n\r\n    \r\n\r\n    return (\r\n        <div className='connection'>\r\n\r\n          <div className='row'>\r\n            <div className=\"card col-sm-6 col-md-6 col-lg-2\">\r\n              <div className='rowCard'>\r\n                <CalendarMinus color='#fbc658' size={40}/>\r\n                <h5>Data Inicial</h5>\r\n                </div>\r\n              <hr/>\r\n              <input  type='date' id='dataBegin' value={inputDateBegin} max={formatDate()} min={\"2015-07-01\"} onChange={(e)=>{setInputDateBegin(e.target.value)}}/> \r\n            </div>\r\n\r\n            <div className=\"card col-sm-6 col-md-6 col-lg-2\">\r\n                <div className='rowCard'>\r\n                <CalendarPlus color='#ef8157' size={40}/>\r\n                <h5>Data Final</h5>\r\n                </div>\r\n              <hr/>\r\n              <input  type='date' id='dateFinish' value={inputDateFinish} max={formatDate()} min={\"2015-07-01\"} onChange={(e)=>{setInputDateFinish(e.target.value)}}/> \r\n           \r\n            </div>\r\n            <div className=\"card col-sm-6 col-md-6 col-lg-2\" id='cardH'>\r\n                <div className='rowCard'>\r\n                <GraphUp color='#6bd098' size={40}/>\r\n                <h5>Investimento</h5>\r\n                </div>\r\n              <hr/>\r\n             <input  type='number' id='Investimen' value={inputInvestiment} min=\"0\" step=\".01\" onChange={(e)=>{setInputInvestiment(e.target.value)}}/>\r\n            </div> \r\n          </div>\r\n\r\n        <Chart\r\n        className=\"card col-sm-6 col-md-6 col-lg-7\"\r\n        style={{display:\"flex\", \r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"}}\r\n          width={'100%'}\r\n          height={'380px'}\r\n          chartType=\"LineChart\"\r\n          loader={<div>Carregando Gráfico</div>}\r\n          data={mapCoins()\r\n          }\r\n          options={{\r\n            hAxis: {\r\n              title: 'Data',\r\n            },\r\n            vAxis: {\r\n              title: 'Valor BitCoin',\r\n            },\r\n          }}\r\n          rootProps={{ 'data-testid': '1' }}\r\n          id='chart'\r\n        />\r\n\r\n\r\n          </div>\r\n        \r\n    );\r\n}\r\n\r\n\r\nexport default Connection;","import React from 'react';\r\nimport { Button, Jumbotron } from 'react-bootstrap';\r\nimport  '../../bootstrap.min.css' ;\r\nimport './styles.css'\r\n\r\nfunction JumbotronB() {\r\n    return(\r\n\r\n          <Jumbotron className='body'>\r\n              \r\n            <h1>Acompanhe seus BitCoins</h1>\r\n            \r\n            <p>\r\n                <Button variant=\"dark\" href=\"#cardH\" >Veja Aqui</Button>\r\n            </p>\r\n            </Jumbotron>\r\n        \r\n    )\r\n}\r\n\r\nexport default JumbotronB","import React, { useState, useEffect , useCallback} from 'react';\r\nimport { Button, Navbar } from 'react-bootstrap';\r\nimport  '../../bootstrap.min.css' ;\r\nimport './styles.css'\r\nimport { PersonPlus } from 'react-bootstrap-icons'\r\n\r\n\r\nfunction Footer() {\r\n    return(\r\n        <div className='footer'> \r\n          <Navbar bg=\"dark\" variant=\"dark\" className='footer'>\r\n            <Navbar.Brand className='footer'>\r\n             <a  id='btnPlus'className=\" btn btn-outline-light btn-social mx-1\" target=\"_blank\" href=\"https://www.linkedin.com/in/marcelo-franchini-35a1bb19b/\">\r\n             <PersonPlus  size={18}/>\r\n</a>\r\n             <h6> Marcelo Franchini </h6>\r\n            </Navbar.Brand>\r\n          </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import Header from '../header'\r\nimport Connection from '../connection'\r\nimport Jumbotron from '../jumbotron'\r\nimport Footer from '../footer'\r\n\r\n\r\nfunction Home(){\r\n\r\n    return(\r\n        <>        \r\n        <Header/>\r\n        <Jumbotron/>\r\n        <Connection/>\r\n        <Footer/>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home","import './App.css';\r\nimport Home from './components/home'\r\n\r\n\r\nfunction App() {\r\n    return ( \r\n    <div className = \"App\" >\r\n       \r\n          <Home/>\r\n        \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}